package EIProjectBeta.EIProjectBeta;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;

import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.TextView;

public class EIProject_Help_Select extends EIProject_Help {
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.help_main_2);  
		count = new int[2];
	    countData();
	    int countTotal = 0;
	    for (int n=0; n<count.length; n++) {
	        countTotal = countTotal + count[n];
	    }
		ListView list = (ListView) findViewById(R.id.HelpMenuListView);
		ArrayList<HashMap<String, Object>> listItem = new ArrayList<HashMap<String, Object>>();  
		
	    TextView tvHelpMenuTitle = (TextView)findViewById(R.id.tvHelpMenuTitle);
	    tvHelpMenuTitle.setText("全部發票列表("+countTotal+")");
	    for (int n=0; n<2; n++) {
	       	HashMap<String, Object> map = new HashMap<String, Object>();  
	       	if (count[n]!=0){
	       		map.put("ItemMenu", "99年 "+monthCStr[(((new Date().getMonth()+2)/2)-2-n)*2]+"月~"+monthCStr[(((new Date().getMonth()+2)/2)-2-n)*2+1]+"月("+count[1-n]+")");
	       		listItem.add(map);
	       	}
	    }
	        
	    SimpleAdapter listItemAdapter = new SimpleAdapter(this,listItem,
		    R.layout.menu_list_items,     
		    new String[] {"ItemMenu"}, 
		    new int[] {R.id.ItemMenu}
		);
		list.setAdapter(listItemAdapter);  
		list.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,long arg3) {
				selNum = arg2;
				Intent intent = new Intent();
		        intent.setClass(EIProject_Help_Select.this,EIProject_Help_Select_Detail.class);
		    	startActivity(intent);
			}});
	}
    protected ArrayList<HashMap<String, Object>> getIData(int selNum) {
		ArrayList<HashMap<String, Object>> alIData =  new ArrayList<HashMap<String, Object>>();
 	    try {

		    todoAcquireDB db = new todoAcquireDB(this);
		    Cursor cursor = db.select();
		    while(!cursor.isLast()){
		    	cursor.moveToNext();
		    	if (Integer.parseInt(cursor.getString(6))!=0 && ((Integer.parseInt((cursor.getString(2).split("/")[1]))+1)/2-1)==(((new Date().getMonth()+1)/2))-2-selNum) {
			    	HashMap<String, Object> map = new HashMap<String, Object>();  
			    	if (Integer.parseInt(cursor.getString(6))!=0) {
			    		map.put("ItemInvoiceNumber", cursor.getString(1).substring(0,2+Integer.parseInt(cursor.getString(6))-1));
			    		map.put("ItemInvoiceNumberLight", cursor.getString(1).substring(2+Integer.parseInt(cursor.getString(6))-1));
			    	} else {
			    		map.put("ItemInvoiceNumber",cursor.getString(1));
			    	}
			    	map.put("ItemIID", cursor.getString(1));
			    	map.put("ItemDateTime", cursor.getString(2));
		            map.put("ItemCheck", true);
		            map.put("ItemCR",getInvoiceCR(cursor.getString(1)));
		            String money = "0";
		            if (cursor.getString(6).equals("1")) {
		            	money="$200000";
		            }else if (cursor.getString(6).equals("2")) {
		            	money="$40000";
		            }else if (cursor.getString(6).equals("3")) {
		            	money="$10000";
		            }else if (cursor.getString(6).equals("4")) {
		            	money="$4000";
		            }else if (cursor.getString(6).equals("5")) {
		            	money="$1000";
		            }else if (cursor.getString(6).equals("6")) {
		            	money="$200";
		            }
		            map.put("ItemMoney", money);
		            map.put("ItemStatus", R.drawable.star);
		            alIData.add(map);
		    	}
		    }
        } catch (Exception e) {
	        Log.e(TAG,e.toString());
	    }
        return alIData;
	}
    private void countData() {
 	    try {
		    todoAcquireDB db = new todoAcquireDB(this);
		    Cursor cursor = db.select();
		    while(!cursor.isLast()){
		    	cursor.moveToNext();
		    	 
		    	int n = ((new Date().getMonth()+2)/2)-((Integer.parseInt(cursor.getString(2).split("/")[1])+1)/2)-1;
		    	if (n==1 || n==0) {
		    		n=1-n;
		    		count[n]++;
		    	}
		    }

        } catch (Exception e) {
	        Log.e(TAG,e.toString());
	    }
    }
    
}
