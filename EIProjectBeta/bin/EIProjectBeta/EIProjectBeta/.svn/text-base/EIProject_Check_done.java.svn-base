package EIProjectBeta.EIProjectBeta;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class EIProject_Check_done extends EIProjectBeta {

    private int [] count;
    private String [] monthCStr = {"","一","二","三","四","五","六","七","八","九","十","十一","十二"};
   
    private ArrayList<HashMap<String, Object>> alIData;
    
    private todoHistoryDB db;
    private Cursor cursor;
   
    private static int register;
	// 圖表相關資訊
	int chartCurrentLevel=0;
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.history_main_1);  
        
		ListView list = (ListView) findViewById(R.id.MenuListView);
		ArrayList<HashMap<String, Object>> listItem = new ArrayList<HashMap<String, Object>>();  
        
        count = new int[(new Date().getMonth()+1)/2+1];
        //計算發票月份
        countData();
        //發票總數
        int countTotal = 0;
   
        countTotal = count[0]+count[1]+count[2]+count[3]+count[4]+count[5];
        //設定title
        TextView tvHistoryMenuTitle = (TextView)findViewById(R.id.tvHistoryMenuTitle);
        tvHistoryMenuTitle.setText("對獎記錄("+countTotal+")");
       	
        for (int n=((new Date().getMonth())/2+1)-1; n>=0; n--) {
       		HashMap<String, Object> map = new HashMap<String, Object>();  
            map.put("ItemMenu", "99年 "+monthCStr[n*2+1]+"月~"+monthCStr[n*2+2]+"月("+count[n]+")");
            listItem.add(map);
        }
        
        SimpleAdapter listItemAdapter = new SimpleAdapter(this,listItem,
	            R.layout.menu_list_items,     
	            new String[] {"ItemMenu"}, 
	            new int[] {R.id.ItemMenu}
	    );
		list.setAdapter(listItemAdapter);  
		list.setOnItemClickListener(new OnItemClickListener() {
			
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				
			  
				showWinInvoice((new Date().getMonth()+1)/2+1-arg2-1);
		    
				
				
			}
		});
		
    }
    private void showWinInvoice(int selNum){
    	setContentView(R.layout.detail_check_done_main);
    	ImageView btnRight=(ImageView)findViewById(R.id.flip_right);
        ImageView btnLeft=(ImageView)findViewById(R.id.flip_left);
        register = selNum;
    	
    	TextView tv = (TextView)findViewById(R.id.doneMainTitle);
		ListView list = (ListView) findViewById(R.id.doneMainLV);
		ArrayList<HashMap<String, Object>> listItem = new ArrayList<HashMap<String, Object>>();  
		
		//設定TITLE月份
        switch(selNum){
        	case 1:
        		tv.setText("99年 "+(monthCStr[selNum])+"月~"+(monthCStr[selNum+1])+"月");
        		break;
        	case 2:
        		tv.setText("99年 "+(monthCStr[selNum+1])+"月~"+(monthCStr[selNum+2])+"月");
        		break;
        	case 3:
        		tv.setText("99年 "+(monthCStr[selNum+2])+"月~"+(monthCStr[selNum+3])+"月");
        		break;
        	case 4:
        		tv.setText("99年 "+(monthCStr[selNum+3])+"月~"+(monthCStr[selNum+4])+"月");
        		break;
        	case 5:
        		tv.setText("99年 "+(monthCStr[selNum+4])+"月~"+(monthCStr[selNum+5])+"月");
        		break;
        	case 6:
        		tv.setText("99年 "+(monthCStr[selNum+5])+"月~"+(monthCStr[selNum+6])+"月");
        		break;
        }
		
		
		//get wining Invoice Data
		alIData = getWinIData(selNum);
		//assign data to ListItem
       	for (int n=0; n<alIData.size(); n++) {
       		listItem.add(alIData.get(n));
        }
        //set up Adapter
        SimpleAdapter listItemAdaptedr = new SimpleAdapter(this,listItem,
	            R.layout.detail_check_done_item,     
	            new String[] {"ItemDateTime","ItemInvoiceNumber","ItemMoney"}, 
	            new int[] {R.id.ItemDateTime,R.id.ItemInvoiceNumber,R.id.ItemMoney}
	    );
        //data繫結
		list.setAdapter(listItemAdaptedr);  
		
		
		
		
		//設定顯示對獎號碼按鈕
		btnRight.setOnClickListener(new View.OnClickListener() {  
	            public void onClick(View view) {  
	            	 Intent intent = new Intent();
	              	  intent.setClass(EIProject_Check_done.this, EIProject_Check_luckyNumberDisplay.class);
	              	  Bundle bundle = new Bundle();
	              	  bundle.putInt("selNum", register);
	              	  intent.putExtras(bundle);
	              	  /* 呼叫一個新的Activity */
	             	  startActivity(intent);
	              	  /* 關閉原本的Activity */
	             	 EIProject_Check_done.this.finish(); 
	            }  
	        });
	        
		
		//設定顯示未中獎號碼按鈕
		btnLeft.setOnClickListener(new View.OnClickListener() {  
	            public void onClick(View view) {  
	            	showNoWinInvoice(register);
	            }  
	        });  
		
    }
    private void showNoWinInvoice(int selNum) {
        setContentView(R.layout.check_done_left);
		ListView list = (ListView) findViewById(R.id.IMenuListView);
		
		ImageView btnRight=(ImageView)findViewById(R.id.right);
		ArrayList<HashMap<String, Object>> listItem = new ArrayList<HashMap<String, Object>>();  
		
		alIData = getNoWinIData(selNum);
       	for (int n=0; n<alIData.size(); n++) {
       		listItem.add(alIData.get(n));
        }
        
        SimpleAdapter listItemAdaptedr = new SimpleAdapter(this,listItem,
	            R.layout.check_neverdo_item,     
	            new String[] {"ItemDateTime","ItemInvoiceNumber"}, 
	            new int[] {R.id.tvCheckNeverDOTime,R.id.tvCheckNeverDONumber}
	    );
		list.setAdapter(listItemAdaptedr);  
		
		btnRight.setOnClickListener(new View.OnClickListener() {  
            public void onClick(View view) {  
            	 Intent intent = new Intent();
              	  intent.setClass(EIProject_Check_done.this, EIProject_Check_done.class);
              	  
              	  /* 呼叫一個新的Activity */
             	  startActivity(intent);
              	  /* 關閉原本的Activity */
             	 EIProject_Check_done.this.finish(); 
            }  
        });
    }
    private ArrayList<HashMap<String, Object>> getWinIData(int selNum) {
		ArrayList<HashMap<String, Object>> alIData =  new ArrayList<HashMap<String, Object>>();
 	 
		    todoHistoryDB db = new todoHistoryDB(this);
		    Cursor cursor = db.select_winInvoice();
		    while(!cursor.isLast()){
		    	cursor.moveToNext();
		    	if ((Integer.parseInt(cursor.getString(2).split("/")[1])+1)/2==selNum){
		    	HashMap<String, Object> map = new HashMap<String, Object>();  
		    	map.put("ItemInvoiceNumber", cursor.getString(1));
	            map.put("ItemDateTime", cursor.getString(2));
	            map.put("ItemStoreName", cursor.getString(3));
	            map.put("ItemStatus", R.drawable.star);
	            String money = "0";
	            
	            if (cursor.getString(6).equals("1")) {
	            	money="$200000";
	            }else if (cursor.getString(6).equals("2")) {
	            	money="$40000";
	            }else if (cursor.getString(6).equals("3")) {
	            	money="$10000";
	            }else if (cursor.getString(6).equals("4")) {
	            	money="$4000";
	            }else if (cursor.getString(6).equals("5")) {
	            	money="$1000";
	            }else if (cursor.getString(6).equals("6")) {
	            	money="$200";
	            }
	            map.put("ItemMoney", money);
	            alIData.add(map);
		    	}
		    }
	
        return alIData;
	}
    private ArrayList<HashMap<String, Object>> getNoWinIData(int selNum) {
    	
		ArrayList<HashMap<String, Object>> alIData =  new ArrayList<HashMap<String, Object>>();
 	 
		    todoHistoryDB db = new todoHistoryDB(this);
		    Cursor cursor = db.select_noWinInvoice();
		    while(!cursor.isLast()){
		    	cursor.moveToNext();
		    	if ((Integer.parseInt(cursor.getString(2).split("/")[1])+1)/2==selNum){
		    	HashMap<String, Object> map = new HashMap<String, Object>();  
		    	map.put("ItemInvoiceNumber", cursor.getString(1));
	            map.put("ItemDateTime", cursor.getString(2));
	   
	            map.put("ItemStatus", R.drawable.star);
	            alIData.add(map);
		    	}
		    }
	
        return alIData;
	}
    private void countData() {
	    	//get data from DB
	    	todoHistoryDB db = new todoHistoryDB(this);
	    	cursor = db.select_doneInvoice();
	    //計算發票月份
 	    	while(!cursor.isLast()){
 	    		cursor.moveToNext();
 	    				count[(Integer.parseInt(cursor.getString(2).split("/")[1])+1)/2-1]++;
 	    	}
 	    	
}
 
        
}
