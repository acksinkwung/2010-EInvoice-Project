package EIProjectBeta.EIProjectBeta;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class todoShopDB extends SQLiteOpenHelper
{
  private final static String DATABASE_NAME = "invoice_db";
  private final static int DATABASE_VERSION = 1;
  private final static String TABLE_NAME = "P_IID";
  private final static String FIELD_id = "_id";
  private final static String FIELD_IID= "IID";
  private final static String FIELD_C= "C";
  private final static String FIELD_R= "R";
  
  private final static String DETAIL_TABLE_NAME = "IID_Detail";
  private final static String DETAIL_FIELD_id = "_id";
  private final static String DETAIL_FIELD_IID= "IID";
  private final static String DETAIL_FIELD_time= "time";
  private final static String DETAIL_FIELD_storeID= "store_ID";
  private final static String DETAIL_FIELD_amount = "amount";
  private final static String DETAIL_FIELD_state = "state";
  private final static String DETAIL_FIELD_money = "money";
  
  public todoShopDB(Context context)
  {
    super(context, DATABASE_NAME, null, DATABASE_VERSION);
    
  }

  @Override
  public void onCreate(SQLiteDatabase db)
  {
  
  }
 
  @Override
  public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
  {/*
    String sql = "DROP TABLE IF EXISTS " + TABLE_NAME;
    db.execSQL(sql);
    onCreate(db);*/
  }

  public Cursor select()
  {
    SQLiteDatabase db = this.getReadableDatabase();
    Cursor cursor = db.query(TABLE_NAME, null, null, null, null, null, null);
    return cursor;
  }
  public long insertDetail(String IID,String time,String storeID,String amount)
  {
    SQLiteDatabase db = this.getWritableDatabase();
    /* 將新增的值放入ContentValues */
    ContentValues cv = new ContentValues();
   // cv.put(FIELD_id, _id);
    cv.put(DETAIL_FIELD_IID, IID);
    cv.put(DETAIL_FIELD_time, time);
    cv.put(DETAIL_FIELD_storeID, storeID);
    cv.put(DETAIL_FIELD_amount, amount);
    cv.put(DETAIL_FIELD_state,2);
    cv.put(DETAIL_FIELD_money,2);
    long row = db.insert(DETAIL_TABLE_NAME, null, cv);
    return row;
  }
  public long insert(String IID,String C,String R)
  {
    SQLiteDatabase db = this.getWritableDatabase();
    /* 將新增的值放入ContentValues */
    ContentValues cv = new ContentValues();
   // cv.put(FIELD_id, _id);
    cv.put(FIELD_IID, IID);
    cv.put(FIELD_C, C);
    cv.put(FIELD_R, R);
    long row = db.insert(TABLE_NAME, null, cv);
    return row;
  }

  public void delete(int id)
  {
    SQLiteDatabase db = this.getWritableDatabase();
    String where = FIELD_id + " = ?";
    String[] whereValue =
    { Integer.toString(id) };
    db.delete(TABLE_NAME, where, whereValue);
  }
 

  public void update(int id, String text)
  {
    SQLiteDatabase db = this.getWritableDatabase();
    String where = FIELD_id + " = ?";
    String[] whereValue =
    { Integer.toString(id) };
    /* 將修改的值放入ContentValues */
    ContentValues cv = new ContentValues();
    cv.put(FIELD_IID, text);
    db.update(TABLE_NAME, cv, where, whereValue);
  }
}
